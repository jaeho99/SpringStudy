리플렉션(reflection)
자바에서 클래스나 멤버에 대한 정보를 런타임에 조사하고, 조작할 수 있는 기능이다. 
예를 들어, 클래스의 이름, 메서드, 필드, 생성자 등에 대한 정보를 프로그램 실행중에 알아내고, 이를 통해 객체를 생성하거나 메서드를 호출할 수 있다.
이기능 덕분에, 개발자는 코드의 유연성과 확장성을 높일 수 있다.

출처 : https://curiousjinan.tistory.com/entry/java-reflection-explain

프로퍼티(Property)
객체의 데이터를 읽거나 쓰는 데 사용되는 클래스의 멤버, 속성(attributee)라고도 불린다.

관심사의 분리(Separation of Concerns)
컴퓨터 프로그램을 구별된 부분으로 분리시키는 디자인 원칙으로, 각 부문은 개개의 관심사를 해결한다.
관심사란 컴퓨터 프로그램 코드에 영향을 미치는 정보의 집합이다.

바인딩(binding)
데이터 바인딩은 클라이언트 요청 데이터를 객체로 변환하는 과정을 뜻한다.

Statement
자바에서 데이터베이스와 통신할 때 사용하는 JDBC의 핵심 객체로, SQL 문을 DB에 전달하고 실행하는 역할을 한다.

리팩토링
소프트웨어의 외부 동작은 그대로 유지하면서 코드의 내부 구조를 개선하는 과정

디자인 패턴
설계 문제에 대한 해답을 문서화하기 위해 고안된 형식 방법이다.

템플릿 메소드 패턴
여러 클래스에서 공통으로 사용하는 메서드를 템플릿화 하여 상위 클래스에서 정의하고, 하위 클래스마다 세부 동작 사항을 다르게 구현하는 패턴이다.

팩토리 메소드(팩토리 메소드 패턴과 의미가 다름)
객체를 생성 반환하는 메서드이다.

팩토리 메소드 패턴 
객체 생성을 팩토리 클래스로 캡슐화 처리하여 대신 생성하게 하는 생성 디자인 패턴이다.


